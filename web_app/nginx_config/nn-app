#1-28-19

server{
        # Directory where the contents being requested are stored
        # This is commented out since there is a default location / defined below.
	#root /home/ubuntu/all_apps/app_1.4/web_app/website/;

        listen 80;
        #server_name server_name_or_IP;
        #server_name 52.11.200.151;
        
        # Define the specified charset to the Content-Type response header field
        charset utf-8;

        # Configuration to deliver static content from the static folder from the flask app.
        # This configuration is not necesary in my app bc I do not have a /static URI for images and static files. 
	#location /static {
        #        alias /home/ubuntu/all_apps/app_1.4/web_app/website/static;
        #}
        
        # Configuration to reverse proxy HTTP requests to the upstream server (Gunicorn (WSGI Server))
        location / {
                # Define the location of the proxy server to send the requests to if it is a local server running on the same machine
                proxy_pass http://localhost:8000; 
                include proxy_params; 

		# If you want to pass the request to a specific Unix socket (if NGINX and Gunicorn are running on the same server)
		# proxy_pass http://unix:/tmp/backend.socket:/

                # This is what the tutorial used. web is the name of the gunicorn container
                # proxy_pass http://web:8000;
        
                # Redefine the header fields that NGINX sends to the upstream server
                # in the tutorial they use either proxy_pass_header or proxy_set_header. idk which one is correct.

                # name and port of the NGINX server
                # This directive causes all redirects to comeback with double IP and causes a Safari Can't Find server error
                # proxy_set_header Host $host;
		
		# schema of the original request (http or https)
		proxy_set_header X-Forward-Proto $Scheme;
		# IP address of the user 
                proxy_set_header X-Real-IP $remote_addr;
		# IP address of every server the client has been proxied through up to this point
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


                # Define the maximum file size on  file uploads. Raghav said 10 should be a safe bet.
                client_max_body_size 10M;
        }
}



#server{
#        listen 80;
#        #server_name server_name_or_IP;
#
#        location / {
#                include proxy_params;
#                proxy_pass http://localhost:8000;
#        }
#}
